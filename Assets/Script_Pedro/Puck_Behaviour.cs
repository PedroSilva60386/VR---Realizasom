using UnityEngine;using Random = UnityEngine.Random;public class Puck_Behaviour : MonoBehaviour{    [SerializeField]    private Transform leftWall;    [SerializeField]    private Transform rightWall;    [SerializeField]    private Transform topWall;    [SerializeField]    private Transform bottomWall;        [SerializeField]    private float forceMultiplier = 5f;    [SerializeField]    private string inputAction = "Fire1"; // Change to the desired action    [SerializeField]    private GameObject paddle;        private Rigidbody _rb;        private void Start()    {        _rb = GetComponent<Rigidbody>();    }    private void FixedUpdate()    {        if (Input.GetButtonDown(inputAction))        {            var v = new Vector3(Random.value, 0, Random.value) * forceMultiplier;            _rb.AddForce(v);        }        var vv = _rb.velocity;        _rb.velocity = vv * 0.999f;    }    private void OnCollisionEnter(Collision collision)    {        Debug.Log("Entered collision with " + collision.gameObject.name);                var puckPosition = transform.position;        if (collision.gameObject.name == rightWall.gameObject.name)        {            var v = _rb.velocity;            _rb.velocity = new Vector3(-v.x, v.y, v.z);        }                if (collision.gameObject.name == leftWall.gameObject.name)        {            var v = _rb.velocity;            _rb.velocity = new Vector3(-v.x, v.y, v.z);        }                        if (collision.gameObject.name == bottomWall.gameObject.name)        {            var v = _rb.velocity;            _rb.velocity = new Vector3(v.x, v.y, -v.z);        }                        if (collision.gameObject.name == topWall.gameObject.name)        {            var v = _rb.velocity;            _rb.velocity = new Vector3(v.x, v.y, -v.z);        }                // ReSharper disable once InvertIf        if (collision.gameObject.name == paddle.gameObject.name)        {             var v = _rb.velocity;             _rb.velocity = new Vector3(-v.x, v.y, -v.z);        }    }        }